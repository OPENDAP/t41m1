#!/bin/sh

DAP2_CE_AIRS_ONE_VAR="ClrOLR_A[0:1:179][0:1:359]"
REPS=100;

# set -x 

function make_bes_cmd() {
BES_CMD=`cat <<EOF 
<?xml version="1.0" encoding="UTF-8"?>
<bes:request xmlns:bes="http://xml.opendap.org/ns/bes/1.0#" reqID="[thread:http-nio-8080-exec-9-27]">
  <bes:setContext name="xdap_accept">3.2</bes:setContext>
  <bes:setContext name="dap_explicit_containers">no</bes:setContext>
  <bes:setContext name="errors">xml</bes:setContext>
  <bes:setContext name="max_response_size">0</bes:setContext>
  <bes:setContainer name="catalogContainer" space="catalog">${DATASET}</bes:setContainer>
  <bes:define name="d1" space="default">
    <bes:container name="catalogContainer">
      <bes:constraint>${DAP2_CE}</bes:constraint>
    </bes:container>
  </bes:define>
  <bes:get type="dods" definition="d1" />
</bes:request>
EOF
`
}

function bess_airs_datset_dmrpp_files(){
    
    response_file=bess_airs_datset_dmrpp.dods
    timing_file=bess_airs_datset_dmrpp.time
    log_file=bess_airs_datset_dmrpp.log
    dataset_list="airs_dmrpp_agg_files"
    DAP2_CE="${DAP2_CE_AIRS_ONE_VAR}"

    rm -f ${timing_file} ${log_file}

    for DATASET in `cat ${dataset_list}`
    do
        make_bes_cmd
        # echo "BES_CMD: "
        # echo "${BES_CMD}"
        echo "Dataset: ${DATASET}" >> ${timing_file}
        echo "${BES_CMD}" > bes.cmd
        echo "Start: "`date -Ins` >> ${timing_file}
       { time -p besstandalone -c ${prefix}/etc/bes/bes.conf -i bes.cmd > ${response_file}; } 2>>${timing_file}
        ls -l ${response_file} >> ${timing_file}
        echo "########################" >> ${timing_file}
        # getdap -D -M ${response_file} >> ${log_file}
        # exit;
    done
    
    
    
    
}


for rep in {1..100}
do
    echo "Starting rep ${rep}"
    
    bess_airs_datset_dmrpp_files
    
done