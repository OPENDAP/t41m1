#!/bin/sh

DAP2_CE_AIRS_ONE_VAR="ClrOLR_A[0:1:179][0:1:359]"
DAP2_CE_AIRS_ONE_VAR_AGG="ClrOLR_A[0:1:364][0:1:179][0:1:359]"
REPS=100;
AIRS_DMRPP_AGG_CHUNKS_TXT="airs_agg_clr_olr_chunks.txt"

# set -x 

function make_bes_cmd() {
BES_CMD=`cat <<EOF 
<?xml version="1.0" encoding="UTF-8"?>
<bes:request xmlns:bes="http://xml.opendap.org/ns/bes/1.0#" reqID="[thread:http-nio-8080-exec-9-27]">
  <bes:setContext name="xdap_accept">3.2</bes:setContext>
  <bes:setContext name="dap_explicit_containers">no</bes:setContext>
  <bes:setContext name="errors">xml</bes:setContext>
  <bes:setContext name="max_response_size">0</bes:setContext>
  <bes:setContainer name="catalogContainer" space="catalog">${DATASET}</bes:setContainer>
  <bes:define name="d1" space="default">
    <bes:container name="catalogContainer">
      <bes:constraint>${DAP2_CE}</bes:constraint>
    </bes:container>
  </bes:define>
  <bes:get type="dods" definition="d1" />
</bes:request>
EOF
`
}


function make_and_time_bess_request {
    
     make_bes_cmd
    # echo "BES_CMD: "
    # echo "${BES_CMD}"
    echo "Dataset: ${DATASET}" >> ${timing_file}
    echo "${BES_CMD}" > bes.cmd
    echo "Start: "`date -Ins` >> ${timing_file}
    { time -p besstandalone -c ${prefix}/etc/bes/bes.conf -i bes.cmd > ${response_file}; } 2>>${timing_file}
    ls -l ${response_file} >> ${timing_file}
    echo "# - - - - - - - - - - - - - - - - - -" >> ${timing_file}
    # getdap -D -M ${response_file} >> ${log_file}
    # exit;
   
}


function bess_airs_datset_dmrpp_files(){
    
    log_file=bess_airs_datset_dmrpp.log
    response_file=bess_airs_datset_dmrpp.dods
    timing_file=bess_airs_datset_dmrpp.time

    dataset_list="airs_dmrpp_agg_files"
    DAP2_CE="${DAP2_CE_AIRS_ONE_VAR}"


    rm -f ${timing_file} ${log_file}
    for rep in {1..100}
    do
        echo "### bess_airs_datset_dmrpp_files() - Starting REP ${rep}" >> ${timing_file}
        for DATASET in `cat ${dataset_list}`
        do
            make_and_time_bess_request
        done
    done
}


function bess_airs_onevar_dmrpp_agg() {

    log_file=bess_airs_onevar_dmrpp_agg.log
    response_file=bess_airs_onevar_dmrpp_agg.dods
    timing_file=bess_airs_onevar_dmrpp_agg.time

    DATASET="t41m1/dmrpp_agg_test_06.dmrpp"
    DAP2_CE="${DAP2_CE_AIRS_ONE_VAR_AGG}"
    
    rm -f ${timing_file} ${log_file}
    for rep in {1..10000}
    do
        echo "### bess_airs_onevar_dmrpp_agg() - Starting REP ${rep}" >> ${timing_file}
        make_and_time_bess_request
    done
}

function make_and_time_curl_range_get_request {
    
    echo "URL: ${URL}" >> ${timing_file}
    echo "Start: "`date -Ins` >> ${timing_file}
    # echo "Start: "`date` >> ${timing_file}
    { time -p curl -s -r ${CURL_START}-${CURL_END} -g ${URL} > ${response_file}; } 2>>${timing_file}
    ls -l ${response_file} >> ${timing_file}
    echo "# - - - - - - - - - - - - - - - - - -" >> ${timing_file}   
}


function curl_range_get_airs_onevar_chunks(){
    
    log_file=curl_range_get_airs_onevar_chunks.log
    response_file=curl_range_get_airs_onevar_chunks.dods
    timing_file=curl_range_get_airs_onevar_chunks.time

    DATASET="t41m1/dmrpp_agg_test_06.dmrpp"
    DAP2_CE="${DAP2_CE_AIRS_ONE_VAR_AGG}"
    
    while read chunk_row; do
        
        echo "Processing chunk: ${chunk_row}"
        URL=`echo ${chunk_row} | awk '{print $1;}' -`
        #echo "URL: ${URL}"
        OFFSET=`echo ${chunk_row} | awk '{print $2;}' -`
        #echo "OFFSET: ${OFFSET}"
        NUM_BYTES=`echo ${chunk_row} | awk '{print $3;}' -`
        #echo "NUM_BYTES: ${NUM_BYTES}"
        CHUNK_POISTION=`echo ${chunk_row} | awk '{print $4;}' -`
        #echo "CHUNK_POISTION: ${CHUNK_POISTION}"
        
        CURL_START=${OFFSET}
        CURL_END=`echo "${OFFSET} + ${NUM_BYTES}" | bc`
        make_and_time_curl_range_get_request

    done <${AIRS_DMRPP_AGG_CHUNKS_TXT}
    
      
}

# bess_airs_datset_dmrpp_files

# bess_airs_onevar_dmrpp_agg

curl_range_get_airs_onevar_chunks
    