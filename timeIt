#!/bin/bash

max_reps=100

RESULTS_DIR="timeIt.results"

# All the data from the ClrOLR_A variable (all locations, all days)
DAP2_CE_ONE_VAR="ClrOLR_A%5B0:1:364%5D%5B0:1:179%5D%5B0:1:359%5D"

# All the data from the ClrOLR_A variable for a single day
DAP2_CE_ONE_DAY="ClrOLR_A%5B5%5D%5B0:1:179%5D%5B0:1:359%5D"

# A single longitude location with all of the latitudes over 360 days
DAP2_CE_ONE_LON="ClrOLR_A%5B0:1:359%5D%5B0:1:179%5D%5B5%5D"

# Current operational CE.
DAP2_CE="${DAP2_CE_ONE_VAR}"

# For this CE, we're using a different DMR++ that does not have the ClrORL_A
# and we slide this so that we get the same number of bytes as with the previous
# CE. The DMR++ is smaller than the whole DMR++ (case 8 adn 9) but bigger than
# the DMR++ in cases 6 and 7.
DAP2_CE_11="CH4_VMR_A%5B0:1:364%5D%5B5%5D%5B0:1:179%5D%5B0:1:359%5D"

# Aggregates hdf5 files using the ncml module and the hdf5 module. The hdf5 files reside
# on the local disk.
airs_local_join_new="http://t41m1.opendap.org:8080/opendap/t41m1/airs_local_join_new.ncml"

# Aggregates hdf5 files using the ncml module and the hdf5 module. The hdf5 files reside
# in S3 and are accessed by mounting the bucket onto the local filesystem using a FUSE
# filesystem called riofs..
# airs_riofs_join_new="http://t41m1.opendap.org:8080/opendap/t41m1/airs_riofs_join_new.ncml"

# Aggregates dmr++ files whose data objects reside on the local disk.
airs_dmrpp_local_join_new="http://t41m1.opendap.org:8080/opendap/t41m1/airs_dmrpp_local_join_new.ncml"

# Aggregates dmr++ files whose data objects reside in S3.
airs_dmrpp_remote_join_new="http://t41m1.opendap.org:8080/opendap/t41m1/airs_dmrpp_remote_join_new.ncml"

# Aggregates one data variable from the AIRS aggregtion inside the
# dmr++ by defining chunks in the variable from multiple binary
# objects. The latitude and longitude are included, both as one
# dimensional and as a time aggregated array. In this case the binary
# objects are in S3.
dmrpp_agg_test_06="http://t41m1.opendap.org:8080/opendap/t41m1/dmrpp_agg_test_06.dmrpp"

# Aggregates one data variable from the AIRS aggregtion inside the
# dmr++ by defining chunks in the variable from multiple binary
# objects. The latitude and longitude are included, both as one
# dimensional and as a time aggregated array. In this case the objects
# are on the local filesystem.
dmrpp_agg_test_07="http://t41m1.opendap.org:8080/opendap/t41m1/dmrpp_agg_test_07.dmrpp"

# Data in S3. Aggregate all variables
dmrpp_agg_test_08="http://t41m1.opendap.org:8080/opendap/t41m1/dmrpp_agg_test_08.dmrpp.gz"

# Data in the local FS. Aggregate all variables
dmrpp_agg_test_09="http://t41m1.opendap.org:8080/opendap/t41m1/dmrpp_agg_test_09.dmrpp.gz"

# The ClrORL suite. All variables whose names begin with ClrORL are aggregated here.
dmrpp_agg_test_10="http://t41m1.opendap.org:8080/opendap/t41m1/dmrpp_agg_test_10.dmrpp.gz"

# The "methane suite". All variables whose names begin with CH4_VMR are aggregated here.
dmrpp_agg_test_11="http://t41m1.opendap.org:8080/opendap/t41m1/dmrpp_agg_test_11.dmrpp.gz"

# Data in the local FS, served by the TDS, aggregate all variables
airs_local_join_new_tds="http://54.164.114.242:8080/thredds/dodsC/local_fs/airs_local_join_new_tds.ncml"

# Set to "yes" to run the aggregations that take along time.
hyrax_trad_aggregations="yes"


########################################################################
#
# spin
#
spinner="-"
function spin {
    echo -e -n '\b'${spinner}
    case ${spinner} in
	"-") spinner="\\";;
        "\\") spinner="|";;
        "|") spinner="/";;
        "/") spinner="-";;
	*) spinner="-";;
    esac
}
########################################################################



########################################################################
#
# time_service_response() 
#
function time_service_response() {
    test_name="${1}"
    test_url="${2}"
    tag=${3}
    
    #echo "test_name: ${test_name}"
    #echo "test_url: ${test_url}"
    
    timing_file=${RESULTS_DIR}/${test_name}.txt
    response_file=${RESULTS_DIR}/${test_name}_${tag}.dods
    error_file=${RESULTS_DIR}/${test_name}_${tag}_error.dods
    { time -p curl -s -i "${test_url}" > ${response_file};} 2>>${timing_file} 
    head -1 ${response_file} | grep 200 
    status=$?
    echo "status: ${status}"
    if [ ${status} -ne 0 ] 
    then
        mv ${response_file} ${error_file}
    else 
        rm -v ${response_file}
    fi 
    spin  
}
########################################################################



########################################################################
#
# mkTestResultsCsv() 
#
# Build the csv files for each individual test and build
# the allTests.csv file
#
function mkTestResultsCsv() {
    rm -vf ${RESULTS_DIR}/*.csv
    
    for i in ${RESULTS_DIR}/*.txt
    do
        name=`basename -s ".txt" ${i}`
        echo "${name}" | tee ${RESULTS_DIR}/${name}.csv
        grep real $i | awk '{print $2;}' - >> ${RESULTS_DIR}/${name}.csv 
    done
    
    paste ${RESULTS_DIR}/*.csv > ${RESULTS_DIR}/all_tests.csv
}
########################################################################



########################################################################
#
# main() (more or less)
#

# Clean results dir
rm -vfr ${RESULTS_DIR} 
# make a new results dir.
mkdir -p ${RESULTS_DIR} 


let rep=0
done=
while test -z "${done}"
do
    spin

    if test -n "$hyrax_trad_aggregations" -a "$hyrax_trad_aggregations" = "yes"
    then
        
        #time_service_response "airs_local_join_new" "${airs_local_join_new}.dods?${DAP2_CE}"
        #time_service_response "airs_riofs_join_new" "${airs_riofs_join_new}.dods?${DAP2_CE}"
        time_service_response "airs_dmrpp_local_join_new" "${airs_dmrpp_local_join_new}.dods?${DAP2_CE}" ${rep}
                
        time_service_response "airs_dmrpp_remote_join_new" "${airs_dmrpp_remote_join_new}.dods?${DAP2_CE}" ${rep}
        
    fi

    time_service_response "dmrpp_agg_test_06" "${dmrpp_agg_test_06}.dods?${DAP2_CE}" ${rep}
    time_service_response "dmrpp_agg_test_07" "${dmrpp_agg_test_07}.dods?${DAP2_CE}" ${rep}
    time_service_response "dmrpp_agg_test_08" "${dmrpp_agg_test_08}.dods?${DAP2_CE}" ${rep}
    time_service_response "dmrpp_agg_test_09" "${dmrpp_agg_test_09}.dods?${DAP2_CE}" ${rep}
    time_service_response "dmrpp_agg_test_10" "${dmrpp_agg_test_10}.dods?${DAP2_CE}" ${rep}
    time_service_response "dmrpp_agg_test_11" "${dmrpp_agg_test_11}.dods?${DAP2_CE_11}" ${rep}
    #time_service_response "airs_local_join_new_tds" "${airs_local_join_new_tds}.dods?${DAP2_CE}"  ${rep}

    let rep=rep+1
    if [ ${rep} -ge ${max_reps} ]
    then
        done="true"
    fi
    spinner="+"
    spin
    
done
echo ""

mkTestResultsCsv

########################################################################




