#!/bin/bash

max_reps=10

DAP2_CE="ClrOLR_A%5B0:1:364%5D%5B0:1:179%5D%5B0:1:359%5D"

# Aggregates hdf5 files using the ncml module and the hdf5 module. The hdf5 files reside
# on the local disk.
airs_local_join_new="http://t41m1.opendap.org:8080/opendap/t41m1/airs_local_join_new.ncml"

# Aggregates hdf5 files using the ncml module and the hdf5 module. The hdf5 files reside
# in S3 and are accessed by mounting the bucket onto the local filesystem using a FUSE
# filesystem called riofs..
airs_riofs_join_new="http://t41m1.opendap.org:8080/opendap/t41m1/airs_riofs_join_new.ncml"

# Aggregates dmr++ files whose data objects reside on the local disk.
airs_dmrpp_local_join_new="http://t41m1.opendap.org:8080/opendap/t41m1/airs_dmrpp_local_join_new.ncml"

# Aggregates dmr++ files whose data objects reside in S3.
airs_dmrpp_remote_join_new="http://t41m1.opendap.org:8080/opendap/t41m1/airs_dmrpp_remote_join_new.ncml"

# Aggregates one data variable from the AIRS aggregtion inside the
# dmr++ by defining chunks in the variable from multiple binary
# objects. The latitude and longitude are included, both as one
# dimensional and as a time aggregated array. In this case the binary
# objects are in S3.
dmrpp_agg_test_06="http://t41m1.opendap.org:8080/opendap/t41m1/dmrpp_agg_test_06.dmrpp"

# Aggregates one data variable from the AIRS aggregtion inside the
# dmr++ by defining chunks in the variable from multiple binary
# objects. The latitude and longitude are included, both as one
# dimensional and as a time aggregated array. In this case the objects
# are on the local filesystem.
dmrpp_agg_test_07="http://t41m1.opendap.org:8080/opendap/t41m1/dmrpp_agg_test_07.dmrpp"

# Data in S3. Aggregate all variables
dmrpp_agg_test_08="http://t41m1.opendap.org:8080/opendap/t41m1/dmrpp_agg_test_08.dmrpp.gz"

# Data in the local FS. Aggregate all variables
dmrpp_agg_test_09="http://t41m1.opendap.org:8080/opendap/t41m1/dmrpp_agg_test_09.dmrpp.gz"

# Data in the local FS, served by the TDS, aggregate all variables
airs_local_join_new_tds="http://54.164.114.242:8080/thredds/dodsC/local_fs/airs_local_join_new_tds.ncml"

# Set to "yes" to run the aggregations that take along time.
hyrax_trad_aggregations="yes"

spinner="-"

function spin {
    echo -n $spinner
    case $spinner in
	"-") spinner="\\";;
        "\\") spinner="|";;
        "|") spinner="/";;
        "/") spinner="-";;
	*) spinner="-";;
    esac
}

# Clean results dir
rm -vfr results
# make a new results dir.
mkdir -p results

let rep=0
done=
while test -z "${done}"
do
    spin

    if test -n "$hyrax_trad_aggregations" -a "$hyrax_trad_aggregations" = "yes"
    then
	{ time -p curl -s "${airs_local_join_new}.dods?${DAP2_CE}" > results/airs_local_join_new.dods;} 2>>results/airs_local_join_new.txt 
	spin

	{ time -p curl -s "${airs_riofs_join_new}.dods?${DAP2_CE}" > results/airs_riofs_join_new.dods;} 2>>results/airs_riofs_join_new.txt 
	spin

	{ time -p curl -s "${airs_dmrpp_local_join_new}.dods?${DAP2_CE}" > results/airs_dmrpp_local_join_new.dods;} 2>>results/airs_dmrpp_local_join_new.txt 
	spin
	
	{ time -p curl -s "${airs_dmrpp_remote_join_new}.dods?${DAP2_CE}" > results/airs_dmrpp_remote_join_new.dods;} 2>>results/airs_dmrpp_remote_join_new.txt 
	spin
    fi

    { time -p curl -s "${dmrpp_agg_test_06}.dods?${DAP2_CE}" > results/dmrpp_agg_test_06.dods;} 2>>results/dmrpp_agg_test_06.txt 
    spin

    { time -p curl -s "${dmrpp_agg_test_07}.dods?${DAP2_CE}" > results/dmrpp_agg_test_07.dods;} 2>>results/dmrpp_agg_test_07.txt 
    spin

    { time -p curl -s "${dmrpp_agg_test_08}.dods?${DAP2_CE}" > results/dmrpp_agg_test_08.dods;} 2>>results/dmrpp_agg_test_08.txt   
    spin
    
    { time -p curl -s "${dmrpp_agg_test_09}.dods?${DAP2_CE}" > results/dmrpp_agg_test_09.dods;} 2>>results/dmrpp_agg_test_09.txt 
    spin

    { time -p curl -s "${airs_local_join_new_tds}.dods?${DAP2_CE}" > results/airs_local_join_new_tds.dods;} 2>>results/airs_local_join_new_tds.txt 
    spin

    let rep=rep+1
    if [ ${rep} -ge ${max_reps} ]
    then
        done="true"
    fi
    spinner="+"
    spin
    
done

echo ""
